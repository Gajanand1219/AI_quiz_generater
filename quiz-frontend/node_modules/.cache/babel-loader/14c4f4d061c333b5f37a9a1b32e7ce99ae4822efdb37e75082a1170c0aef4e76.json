{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deshm\\\\OneDrive\\\\Desktop\\\\quiz\\\\quiz\\\\quiz-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Full App.js with timer, answer capture, scoring, and no in‑place question editing\nimport React, { useState, useEffect } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"./App.css\";\n\n// ---------------------------------------------\n// Quiz type meta\n// ---------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quizTypes = [{\n  label: \"Multiple Choice\",\n  value: \"mcq\"\n}, {\n  label: \"True / False\",\n  value: \"tf\"\n}, {\n  label: \"Fill in the Blanks\",\n  value: \"fib\"\n}, {\n  label: \"Video Based\",\n  value: \"video\"\n}, {\n  label: \"URL Based\",\n  value: \"url\"\n}];\n\n// ---------------------------------------------\n// Main component\n// ---------------------------------------------\nexport default function App() {\n  _s();\n  /* ─────────────────────────────────────────────\n   * Global state\n   * ───────────────────────────────────────────*/\n  const [step, setStep] = useState(\"auth\");\n  const [authStep, setAuthStep] = useState(\"login\");\n\n  // Auth\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // Quiz generation inputs\n  const [file, setFile] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [quizType, setQuizType] = useState(\"mcq\");\n\n  // Quiz + UI state\n  const [quiz, setQuiz] = useState([]); // generated questions\n  const [quizSource, setQuizSource] = useState(\"\"); // file name / url label\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  // User profile + history\n  const [userProfile, setUserProfile] = useState(null);\n  const [showProfile, setShowProfile] = useState(false);\n  const [quizHistory, setQuizHistory] = useState([]);\n\n  // PDF handling\n  const [pdfBlob, setPdfBlob] = useState(null);\n  const [pdfUrl, setPdfUrl] = useState(\"\");\n  const [showPdfModal, setShowPdfModal] = useState(false);\n\n  // Timer / quiz‑taking state\n  const [timeLeft, setTimeLeft] = useState(300); // default 5 min\n  const [timerActive, setTimerActive] = useState(false);\n  const [userAnswers, setUserAnswers] = useState({}); // { [qIdx]: answer }\n  const [showResults, setShowResults] = useState(false);\n  const [score, setScore] = useState(null); // { total, correct }\n\n  /* ─────────────────────────────────────────────\n   * Utility helpers\n   * ───────────────────────────────────────────*/\n  const isValidUrl = urlString => {\n    try {\n      new URL(urlString);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n  const getCurrentPageTitle = () => {\n    switch (step) {\n      case \"upload\":\n        return \"Create New Quiz\";\n      case \"preview\":\n        return \"Quiz\";\n      case \"auth\":\n        return authStep === \"login\" ? \"Login\" : \"Register\";\n      default:\n        return \"AI Quiz Generator\";\n    }\n  };\n\n  /* ─────────────────────────────────────────────\n   * Auth handlers\n   * ───────────────────────────────────────────*/\n  const handleRegister = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        alert(\"Registration successful! Please login.\");\n        setAuthStep(\"login\");\n      } else {\n        alert(data.message || \"Registration failed\");\n      }\n    } catch (error) {\n      alert(\"Registration error: \" + error.message);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      const formData = new URLSearchParams();\n      formData.append(\"username\", username);\n      formData.append(\"password\", password);\n      const res = await fetch(\"http://localhost:8000/login\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setUserProfile({\n          username,\n          email: `${username}@example.com`,\n          joinedDate: new Date().toISOString().split(\"T\")[0],\n          quizzesGenerated: 0,\n          downloads: 0,\n          lastActive: new Date().toLocaleDateString()\n        });\n        setStep(\"upload\");\n      } else {\n        alert(data.message || \"Login failed\");\n      }\n    } catch (error) {\n      alert(\"Login error: \" + error.message);\n    }\n  };\n  const handleLogout = () => {\n    setStep(\"auth\");\n    setUsername(\"\");\n    setPassword(\"\");\n    setUserProfile(null);\n    setShowProfile(false);\n  };\n\n  /* ─────────────────────────────────────────────\n   * Quiz generation handlers\n   * ───────────────────────────────────────────*/\n  const handleUpload = async () => {\n    if (quizType !== \"url\" && !file || quizType === \"url\" && !url) {\n      alert(\"Please provide the required input\");\n      return;\n    }\n    if (quizType === \"url\" && !isValidUrl(url)) {\n      alert(\"Please enter a valid URL\");\n      return;\n    }\n    setLoading(true);\n    const formData = new FormData();\n    if (file) formData.append(\"file\", file);\n    formData.append(\"quiz_type\", quizType);\n    if (url) formData.append(\"url\", url);\n    try {\n      const res = await fetch(\"http://localhost:8000/generate-quiz\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!res.ok) {\n        const err = await res.json();\n        throw new Error(err.detail || \"Failed to generate quiz\");\n      }\n      const data = await res.json();\n      setQuiz(data.quiz);\n      setQuizSource(quizType === \"url\" ? url : file ? file.name : \"content\");\n      setStep(\"preview\");\n\n      // profile counters\n      setUserProfile(prev => ({\n        ...prev,\n        quizzesGenerated: ((prev === null || prev === void 0 ? void 0 : prev.quizzesGenerated) || 0) + 1\n      }));\n    } catch (error) {\n      alert(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /* ─────────────────────────────────────────────\n   * PDF generation\n   * ───────────────────────────────────────────*/\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    let y = 10;\n    const pageH = doc.internal.pageSize.height;\n    doc.setFontSize(18).setTextColor(0, 102, 204);\n    doc.text(`Quiz: ${quizSource}`, 10, y);\n    y += 12;\n    quiz.forEach((q, i) => {\n      var _q$options;\n      doc.setFontSize(14).setTextColor(0, 0, 0);\n      const questionLines = doc.splitTextToSize(`${i + 1}. ${q.question}`, 180);\n      doc.text(questionLines, 10, y);\n      y += questionLines.length * 7;\n      if ((_q$options = q.options) !== null && _q$options !== void 0 && _q$options.length) {\n        doc.setFontSize(12).setTextColor(51, 51, 51);\n        q.options.forEach((opt, j) => {\n          const optLines = doc.splitTextToSize(`   ${String.fromCharCode(65 + j)}. ${opt}`, 175);\n          doc.text(optLines, 15, y);\n          y += optLines.length * 6;\n        });\n      }\n      doc.setDrawColor(200, 200, 200).line(10, y, 200, y);\n      y += 6;\n      if (y > pageH - 20 && i < quiz.length - 1) {\n        doc.addPage();\n        y = 10;\n      }\n    });\n    return doc.output(\"blob\");\n  };\n  const exportToPDF = () => {\n    const blob = generatePDF();\n    setPdfBlob(blob);\n    setPdfUrl(URL.createObjectURL(blob));\n    setShowPdfModal(true);\n    const quizDate = new Date().toLocaleDateString();\n    setQuizHistory(prev => [...prev, {\n      title: `Quiz ${prev.length + 1} - ${quizDate}`,\n      questions: [...quiz],\n      dateCreated: quizDate,\n      type: quizType,\n      source: quizSource,\n      pdf: blob\n    }]);\n    setUserProfile(prev => ({\n      ...prev,\n      downloads: (prev.downloads || 0) + 1,\n      lastActive: new Date().toLocaleDateString()\n    }));\n  };\n  const viewPDF = blob => {\n    const url = URL.createObjectURL(blob);\n    window.open(url, \"_blank\");\n  };\n\n  /* ─────────────────────────────────────────────\n   * Quiz‑taking helpers\n   * ───────────────────────────────────────────*/\n  const handleSubmitQuiz = () => {\n    setTimerActive(false);\n    const total = quiz.length;\n    let correct = 0;\n    quiz.forEach((q, idx) => {\n      if ((userAnswers[idx] || \"\").toString().trim().toLowerCase() === (q.answer || \"\").toString().trim().toLowerCase()) {\n        correct += 1;\n      }\n    });\n    setScore({\n      total,\n      correct\n    });\n    setShowResults(true);\n  };\n\n  /* ─────────────────────────────────────────────\n   * Effects – timer & reset on preview enter\n   * ───────────────────────────────────────────*/\n  useEffect(() => {\n    if (step === \"preview\") {\n      setTimeLeft(60 * 5); // 5 minutes default – adjust if needed\n      setTimerActive(true);\n      setUserAnswers({});\n      setShowResults(false);\n      setScore(null);\n    }\n  }, [step]);\n  useEffect(() => {\n    if (timerActive && timeLeft > 0) {\n      const id = setInterval(() => setTimeLeft(t => t - 1), 1000);\n      return () => clearInterval(id);\n    }\n    if (timerActive && timeLeft === 0) {\n      handleSubmitQuiz();\n    }\n  }, [timerActive, timeLeft]);\n\n  /* ─────────────────────────────────────────────\n   * Render helpers – question block\n   * ───────────────────────────────────────────*/\n  const renderQuestion = (q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"question-number\",\n        children: [\"Question \", idx + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"question-type\",\n        children: quizType === \"video\" ? \"Video\" : quizType === \"url\" ? \"Web\" : quizType === \"tf\" ? \"True/False\" : quizType === \"fib\" ? \"Fill‑in\" : \"Multiple Choice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-text\",\n        children: q.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), q.options && q.options.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-grid\",\n        children: q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"option-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `q-${idx}`,\n            value: opt,\n            checked: userAnswers[idx] === opt,\n            onChange: () => setUserAnswers(prev => ({\n              ...prev,\n              [idx]: opt\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: opt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"fib-input\",\n        placeholder: \"Your answer\",\n        value: userAnswers[idx] || \"\",\n        onChange: e => setUserAnswers(prev => ({\n          ...prev,\n          [idx]: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, idx, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n\n  /* ─────────────────────────────────────────────\n   * JSX\n   * ───────────────────────────────────────────*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [step !== \"auth\" && /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: getCurrentPageTitle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile-button\",\n        onClick: () => setShowProfile(!showProfile),\n        children: [\"\\uD83D\\uDC64 \", (userProfile === null || userProfile === void 0 ? void 0 : userProfile.username) || \"Profile\", (userProfile === null || userProfile === void 0 ? void 0 : userProfile.quizzesGenerated) > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-badge\",\n          children: userProfile.quizzesGenerated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this), showProfile && userProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-content\",\n      children: [step === \"auth\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), step === \"upload\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), step === \"preview\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer-box\",\n              children: [\"\\u23F1\\uFE0F Time Left: \", Math.floor(timeLeft / 60), \":\", String(timeLeft % 60).padStart(2, \"0\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quiz-source\",\n              children: [\"Source: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: quizSource\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 54\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz-questions\",\n            children: quiz.map(renderQuestion)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-actions\",\n            children: !showResults ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-btn\",\n              onClick: handleSubmitQuiz,\n              children: \"Submit Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"results-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Score Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Total Questions: \", score.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Correct Answers: \", score.correct]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Percentage: \", (score.correct / score.total * 100).toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Correct Answers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 21\n              }, this), quiz.map((q, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [i + 1, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 34\n                }, this), \" \", q.question, \" \\u2013 \", /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: q.answer\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 75\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"export-btn\",\n                onClick: exportToPDF,\n                children: \"Export to PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"another-btn\",\n                onClick: () => setStep(\"upload\"),\n                children: \"Create Another Quiz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), showPdfModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pdf-modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P8loeEROuv0qiHZwjWZhJm1SHbA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsPDF","jsxDEV","_jsxDEV","quizTypes","label","value","App","_s","step","setStep","authStep","setAuthStep","username","setUsername","password","setPassword","file","setFile","url","setUrl","quizType","setQuizType","quiz","setQuiz","quizSource","setQuizSource","loading","setLoading","success","setSuccess","userProfile","setUserProfile","showProfile","setShowProfile","quizHistory","setQuizHistory","pdfBlob","setPdfBlob","pdfUrl","setPdfUrl","showPdfModal","setShowPdfModal","timeLeft","setTimeLeft","timerActive","setTimerActive","userAnswers","setUserAnswers","showResults","setShowResults","score","setScore","isValidUrl","urlString","URL","getCurrentPageTitle","handleRegister","res","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","message","error","handleLogin","formData","URLSearchParams","append","email","joinedDate","Date","toISOString","split","quizzesGenerated","downloads","lastActive","toLocaleDateString","handleLogout","handleUpload","FormData","err","Error","detail","name","prev","generatePDF","doc","y","pageH","internal","pageSize","height","setFontSize","setTextColor","text","forEach","q","i","_q$options","questionLines","splitTextToSize","question","length","options","opt","j","optLines","String","fromCharCode","setDrawColor","line","addPage","output","exportToPDF","blob","createObjectURL","quizDate","title","questions","dateCreated","type","source","pdf","viewPDF","window","open","handleSubmitQuiz","total","correct","idx","toString","trim","toLowerCase","answer","id","setInterval","t","clearInterval","renderQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","checked","onChange","placeholder","e","target","onClick","Math","floor","padStart","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/deshm/OneDrive/Desktop/quiz/quiz/quiz-frontend/src/App.js"],"sourcesContent":["// Full App.js with timer, answer capture, scoring, and no in‑place question editing\nimport React, { useState, useEffect } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"./App.css\";\n\n// ---------------------------------------------\n// Quiz type meta\n// ---------------------------------------------\nconst quizTypes = [\n  { label: \"Multiple Choice\", value: \"mcq\" },\n  { label: \"True / False\", value: \"tf\" },\n  { label: \"Fill in the Blanks\", value: \"fib\" },\n  { label: \"Video Based\", value: \"video\" },\n  { label: \"URL Based\", value: \"url\" },\n];\n\n// ---------------------------------------------\n// Main component\n// ---------------------------------------------\nexport default function App() {\n  /* ─────────────────────────────────────────────\n   * Global state\n   * ───────────────────────────────────────────*/\n  const [step, setStep] = useState(\"auth\");\n  const [authStep, setAuthStep] = useState(\"login\");\n\n  // Auth\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // Quiz generation inputs\n  const [file, setFile] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [quizType, setQuizType] = useState(\"mcq\");\n\n  // Quiz + UI state\n  const [quiz, setQuiz] = useState([]);                  // generated questions\n  const [quizSource, setQuizSource] = useState(\"\");      // file name / url label\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  // User profile + history\n  const [userProfile, setUserProfile] = useState(null);\n  const [showProfile, setShowProfile] = useState(false);\n  const [quizHistory, setQuizHistory] = useState([]);\n\n  // PDF handling\n  const [pdfBlob, setPdfBlob] = useState(null);\n  const [pdfUrl, setPdfUrl]   = useState(\"\");\n  const [showPdfModal, setShowPdfModal] = useState(false);\n\n  // Timer / quiz‑taking state\n  const [timeLeft, setTimeLeft]   = useState(300);   // default 5 min\n  const [timerActive, setTimerActive] = useState(false);\n  const [userAnswers, setUserAnswers] = useState({}); // { [qIdx]: answer }\n  const [showResults, setShowResults] = useState(false);\n  const [score, setScore] = useState(null);           // { total, correct }\n\n  /* ─────────────────────────────────────────────\n   * Utility helpers\n   * ───────────────────────────────────────────*/\n  const isValidUrl = (urlString) => {\n    try { new URL(urlString); return true; } catch { return false; }\n  };\n\n  const getCurrentPageTitle = () => {\n    switch (step) {\n      case \"upload\":  return \"Create New Quiz\";\n      case \"preview\": return \"Quiz\";\n      case \"auth\":    return authStep === \"login\" ? \"Login\" : \"Register\";\n      default:         return \"AI Quiz Generator\";\n    }\n  };\n\n  /* ─────────────────────────────────────────────\n   * Auth handlers\n   * ───────────────────────────────────────────*/\n  const handleRegister = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/register\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }),\n      });\n      const data = await res.json();\n      if (res.ok) {\n        alert(\"Registration successful! Please login.\");\n        setAuthStep(\"login\");\n      } else {\n        alert(data.message || \"Registration failed\");\n      }\n    } catch (error) {\n      alert(\"Registration error: \" + error.message);\n    }\n  };\n\n  const handleLogin = async () => {\n    try {\n      const formData = new URLSearchParams();\n      formData.append(\"username\", username);\n      formData.append(\"password\", password);\n\n      const res = await fetch(\"http://localhost:8000/login\", {\n        method: \"POST\",\n        body: formData,\n      });\n      const data = await res.json();\n\n      if (res.ok) {\n        setUserProfile({\n          username,\n          email: `${username}@example.com`,\n          joinedDate: new Date().toISOString().split(\"T\")[0],\n          quizzesGenerated: 0,\n          downloads: 0,\n          lastActive: new Date().toLocaleDateString(),\n        });\n        setStep(\"upload\");\n      } else {\n        alert(data.message || \"Login failed\");\n      }\n    } catch (error) {\n      alert(\"Login error: \" + error.message);\n    }\n  };\n\n  const handleLogout = () => {\n    setStep(\"auth\");\n    setUsername(\"\");\n    setPassword(\"\");\n    setUserProfile(null);\n    setShowProfile(false);\n  };\n\n  /* ─────────────────────────────────────────────\n   * Quiz generation handlers\n   * ───────────────────────────────────────────*/\n  const handleUpload = async () => {\n    if ((quizType !== \"url\" && !file) || (quizType === \"url\" && !url)) {\n      alert(\"Please provide the required input\");\n      return;\n    }\n    if (quizType === \"url\" && !isValidUrl(url)) {\n      alert(\"Please enter a valid URL\");\n      return;\n    }\n\n    setLoading(true);\n\n    const formData = new FormData();\n    if (file) formData.append(\"file\", file);\n    formData.append(\"quiz_type\", quizType);\n    if (url) formData.append(\"url\", url);\n\n    try {\n      const res = await fetch(\"http://localhost:8000/generate-quiz\", {\n        method: \"POST\",\n        body: formData,\n      });\n      if (!res.ok) {\n        const err = await res.json();\n        throw new Error(err.detail || \"Failed to generate quiz\");\n      }\n      const data = await res.json();\n      setQuiz(data.quiz);\n      setQuizSource(quizType === \"url\" ? url : file ? file.name : \"content\");\n      setStep(\"preview\");\n\n      // profile counters\n      setUserProfile((prev) => ({\n        ...prev,\n        quizzesGenerated: (prev?.quizzesGenerated || 0) + 1,\n      }));\n    } catch (error) {\n      alert(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /* ─────────────────────────────────────────────\n   * PDF generation\n   * ───────────────────────────────────────────*/\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    let y = 10;\n    const pageH = doc.internal.pageSize.height;\n\n    doc.setFontSize(18).setTextColor(0, 102, 204);\n    doc.text(`Quiz: ${quizSource}`, 10, y);\n    y += 12;\n\n    quiz.forEach((q, i) => {\n      doc.setFontSize(14).setTextColor(0, 0, 0);\n      const questionLines = doc.splitTextToSize(`${i + 1}. ${q.question}`, 180);\n      doc.text(questionLines, 10, y);\n      y += questionLines.length * 7;\n\n      if (q.options?.length) {\n        doc.setFontSize(12).setTextColor(51, 51, 51);\n        q.options.forEach((opt, j) => {\n          const optLines = doc.splitTextToSize(`   ${String.fromCharCode(65 + j)}. ${opt}`, 175);\n          doc.text(optLines, 15, y);\n          y += optLines.length * 6;\n        });\n      }\n\n      doc.setDrawColor(200, 200, 200).line(10, y, 200, y);\n      y += 6;\n      if (y > pageH - 20 && i < quiz.length - 1) {\n        doc.addPage();\n        y = 10;\n      }\n    });\n    return doc.output(\"blob\");\n  };\n\n  const exportToPDF = () => {\n    const blob = generatePDF();\n    setPdfBlob(blob);\n    setPdfUrl(URL.createObjectURL(blob));\n    setShowPdfModal(true);\n\n    const quizDate = new Date().toLocaleDateString();\n    setQuizHistory((prev) => [\n      ...prev,\n      {\n        title: `Quiz ${prev.length + 1} - ${quizDate}`,\n        questions: [...quiz],\n        dateCreated: quizDate,\n        type: quizType,\n        source: quizSource,\n        pdf: blob,\n      },\n    ]);\n\n    setUserProfile((prev) => ({\n      ...prev,\n      downloads: (prev.downloads || 0) + 1,\n      lastActive: new Date().toLocaleDateString(),\n    }));\n  };\n\n  const viewPDF = (blob) => {\n    const url = URL.createObjectURL(blob);\n    window.open(url, \"_blank\");\n  };\n\n  /* ─────────────────────────────────────────────\n   * Quiz‑taking helpers\n   * ───────────────────────────────────────────*/\n  const handleSubmitQuiz = () => {\n    setTimerActive(false);\n    const total = quiz.length;\n    let correct = 0;\n    quiz.forEach((q, idx) => {\n      if ((userAnswers[idx] || \"\").toString().trim().toLowerCase() === (q.answer || \"\").toString().trim().toLowerCase()) {\n        correct += 1;\n      }\n    });\n    setScore({ total, correct });\n    setShowResults(true);\n  };\n\n  /* ─────────────────────────────────────────────\n   * Effects – timer & reset on preview enter\n   * ───────────────────────────────────────────*/\n  useEffect(() => {\n    if (step === \"preview\") {\n      setTimeLeft(60 * 5); // 5 minutes default – adjust if needed\n      setTimerActive(true);\n      setUserAnswers({});\n      setShowResults(false);\n      setScore(null);\n    }\n  }, [step]);\n\n  useEffect(() => {\n    if (timerActive && timeLeft > 0) {\n      const id = setInterval(() => setTimeLeft((t) => t - 1), 1000);\n      return () => clearInterval(id);\n    }\n    if (timerActive && timeLeft === 0) {\n      handleSubmitQuiz();\n    }\n  }, [timerActive, timeLeft]);\n\n  /* ─────────────────────────────────────────────\n   * Render helpers – question block\n   * ───────────────────────────────────────────*/\n  const renderQuestion = (q, idx) => (\n    <div key={idx} className=\"question-card\">\n      <div className=\"question-header\">\n        <span className=\"question-number\">Question {idx + 1}</span>\n        <span className=\"question-type\">\n          {quizType === \"video\" ? \"Video\" : quizType === \"url\" ? \"Web\" : quizType === \"tf\" ? \"True/False\" : quizType === \"fib\" ? \"Fill‑in\" : \"Multiple Choice\"}\n        </span>\n      </div>\n      <div className=\"question-content\">\n        <p className=\"question-text\">{q.question}</p>\n\n        {q.options && q.options.length > 0 ? (\n          <div className=\"options-grid\">\n            {q.options.map((opt, i) => (\n              <label key={i} className=\"option-item\">\n                <input\n                  type=\"radio\"\n                  name={`q-${idx}`}\n                  value={opt}\n                  checked={userAnswers[idx] === opt}\n                  onChange={() => setUserAnswers((prev) => ({ ...prev, [idx]: opt }))}\n                />\n                <span>{opt}</span>\n              </label>\n            ))}\n          </div>\n        ) : (\n          <input\n            type=\"text\"\n            className=\"fib-input\"\n            placeholder=\"Your answer\"\n            value={userAnswers[idx] || \"\"}\n            onChange={(e) => setUserAnswers((prev) => ({ ...prev, [idx]: e.target.value }))}\n          />\n        )}\n      </div>\n    </div>\n  );\n\n  /* ─────────────────────────────────────────────\n   * JSX\n   * ───────────────────────────────────────────*/\n  return (\n    <div className=\"app-container\">\n      {/* Header */}\n      {step !== \"auth\" && (\n        <header className=\"app-header\">\n          <h1>{getCurrentPageTitle()}</h1>\n          <button className=\"profile-button\" onClick={() => setShowProfile(!showProfile)}>\n            👤 {userProfile?.username || \"Profile\"}\n            {userProfile?.quizzesGenerated > 0 && <span className=\"notification-badge\">{userProfile.quizzesGenerated}</span>}\n          </button>\n        </header>\n      )}\n\n      {/* Profile modal (unchanged from original) */}\n      {showProfile && userProfile && (\n        <div className=\"profile-modal\">\n          {/*  … existing profile modal content kept unchanged … */}\n        </div>\n      )}\n\n      {/* Main content */}\n      <main className=\"app-content\">\n        {/* AUTH STEP */}\n        {step === \"auth\" && (\n          <div className=\"auth-container\">\n            {/* … existing auth UI … */}\n          </div>\n        )}\n\n        {/* UPLOAD STEP */}\n        {step === \"upload\" && (\n          <div className=\"upload-container\">\n            {/* … existing upload UI (unchanged) … */}\n          </div>\n        )}\n\n        {/* PREVIEW / QUIZ STEP */}\n        {step === \"preview\" && (\n          <div className=\"preview-container\">\n            <div className=\"preview-card\">\n              <div className=\"quiz-header\">\n                <h2>Quiz</h2>\n                <div className=\"timer-box\">\n                  ⏱️ Time Left: {Math.floor(timeLeft / 60)}:{String(timeLeft % 60).padStart(2, \"0\")}\n                </div>\n                <div className=\"quiz-source\">Source: <span>{quizSource}</span></div>\n              </div>\n\n              {/* QUESTIONS */}\n              <div className=\"quiz-questions\">\n                {quiz.map(renderQuestion)}\n              </div>\n\n              {/* ACTIONS/RESULTS */}\n              <div className=\"preview-actions\">\n                {!showResults ? (\n                  <button className=\"submit-btn\" onClick={handleSubmitQuiz}>Submit Quiz</button>\n                ) : (\n                  <div className=\"results-summary\">\n                    <h3>Score Summary</h3>\n                    <p>Total Questions: {score.total}</p>\n                    <p>Correct Answers: {score.correct}</p>\n                    <p>Percentage: {(score.correct / score.total * 100).toFixed(2)}%</p>\n                    <hr />\n                    <h4>Correct Answers</h4>\n                    {quiz.map((q, i) => (\n                      <p key={i}><strong>{i + 1}.</strong> {q.question} – <em>{q.answer}</em></p>\n                    ))}\n\n                    <button className=\"export-btn\" onClick={exportToPDF}>Export to PDF</button>\n                    <button className=\"another-btn\" onClick={() => setStep(\"upload\")}>Create Another Quiz</button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n\n      {/* PDF MODAL */}\n      {showPdfModal && (\n        <div className=\"pdf-modal\">\n          {/* … existing pdf modal content unchanged … */}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}